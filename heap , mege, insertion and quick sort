#include <stdio.h>
Void swap(int* a, int* b) {
    Int temp = *a;
    *a = *b;
    *b = temp;
}
Void heapify(int arr[], int n, int i) {
    Int largest = i; 
    Int left = 2 * i + 1;
    Int right = 2 * i + 2; 
    If (left < n && arr[left] > arr[largest])
        Largest = left;
    If (right < n && arr[right] > arr[largest])
        Largest = right;
    If (largest != i) {
        Swap(&arr[i], &arr[largest]);
        Heapify(arr, n, largest);
    }
}
Void heapSort(int arr[], int n) {
    // Build heap (rearrange array)
    For (int i = n / 2 – 1; i >= 0; i--)
        Heapify(arr, n, i)
    For (int i = n – 1; i >= 0; i--) {
        // Move current root to end
        Swap(&arr[0], &arr[i]);
        Heapify(arr, i, 0);
    }
}
Void printArray(int arr[], int n) {
    For (int i = 0; i < n; ++i)
        Printf(“%d “, arr[i]);
    Printf(“\n”);
}
Int main() {
    Int arr[] = {12, 11, 13, 5, 6, 7};
    Int n = sizeof(arr) / sizeof(arr[0]);
    heapSort(arr, n);
    printf(“Sorted array is \n”);
    printArray(arr, n);
    return 0;
}
